apiVersion: apps/v1
kind: Deployment
metadata:
  name: qdrant
  namespace: free-deep-research
  labels:
    app: qdrant
    component: vector-database
    phase: "5.0"
    version: "1.11.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: qdrant
  template:
    metadata:
      labels:
        app: qdrant
        component: vector-database
        phase: "5.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "6333"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: fdr-service-account
      priorityClassName: fdr-high
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: qdrant
        image: qdrant/qdrant:v1.11.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6333
          name: http
          protocol: TCP
        - containerPort: 6334
          name: grpc
          protocol: TCP
        env:
        - name: QDRANT__SERVICE__HTTP_PORT
          value: "6333"
        - name: QDRANT__SERVICE__GRPC_PORT
          value: "6334"
        - name: QDRANT__CLUSTER__ENABLED
          value: "true"
        - name: QDRANT__CLUSTER__P2P__PORT
          value: "6335"
        - name: QDRANT__STORAGE__STORAGE_PATH
          value: "/qdrant/storage"
        - name: QDRANT__STORAGE__SNAPSHOTS_PATH
          value: "/qdrant/snapshots"
        - name: QDRANT__SERVICE__ENABLE_CORS
          value: "true"
        - name: QDRANT__LOG_LEVEL
          value: "INFO"
        - name: QDRANT__STORAGE__PERFORMANCE__MAX_SEARCH_THREADS
          value: "4"
        - name: QDRANT__STORAGE__OPTIMIZERS__MEMMAP_THRESHOLD
          value: "200000"
        - name: QDRANT__STORAGE__OPTIMIZERS__INDEXING_THRESHOLD
          value: "20000"
        volumeMounts:
        - name: qdrant-storage
          mountPath: /qdrant/storage
        - name: qdrant-snapshots
          mountPath: /qdrant/snapshots
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /
            port: 6333
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: 6333
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: 6333
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: qdrant-storage
        persistentVolumeClaim:
          claimName: qdrant-storage-pvc
      - name: qdrant-snapshots
        persistentVolumeClaim:
          claimName: qdrant-snapshots-pvc
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - qdrant
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "high-memory"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: qdrant-service
  namespace: free-deep-research
  labels:
    app: qdrant
    component: vector-database
    phase: "5.0"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "6333"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 6333
    targetPort: 6333
    protocol: TCP
    name: http
  - port: 6334
    targetPort: 6334
    protocol: TCP
    name: grpc
  selector:
    app: qdrant
---
apiVersion: v1
kind: Service
metadata:
  name: qdrant-headless
  namespace: free-deep-research
  labels:
    app: qdrant
    component: vector-database
    phase: "5.0"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 6335
    targetPort: 6335
    protocol: TCP
    name: p2p
  selector:
    app: qdrant
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: qdrant-destination-rule
  namespace: free-deep-research
spec:
  host: qdrant-service.free-deep-research.svc.cluster.local
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 50
        maxRequestsPerConnection: 10
    loadBalancer:
      simple: LEAST_CONN
    outlierDetection:
      consecutiveErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: qdrant-virtual-service
  namespace: free-deep-research
spec:
  hosts:
  - qdrant-service.free-deep-research.svc.cluster.local
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: qdrant-service.free-deep-research.svc.cluster.local
        port:
          number: 6333
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
